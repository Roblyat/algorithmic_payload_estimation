services:
  moveit_humble:
    build:
      context: .                 # directory that contains your Dockerfile
      dockerfile: Dockerfile.humble
      args:
        USER_UID: ${UID:-1000}
        USER_GID: ${GID:-1000}
        USERNAME: ${USER:-robat}
    image: moveit-humble-custom
    container_name: moveit_humble_container

    network_mode: host
    ipc: host

    # Request GPU for RViz (compose v2: easiest is 'gpus: all')
    gpus: all
    runtime: nvidia

    environment:
      # ROS / DDS
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
      - ROS_DOMAIN_ID=0
      - ROS_LOCALHOST_ONLY=0

      # Display (X11)
      - DISPLAY=${DISPLAY}
      - QT_QPA_PLATFORM=xcb
      - QT_X11_NO_MITSHM=1
      - QT_AUTO_SCREEN_SCALE_FACTOR=0

      - XDG_RUNTIME_DIR=/tmp/runtime-${USER}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all

      # Colcon uses your venv Python
      - COLCON_PYTHON_EXECUTABLE=/opt/venv/bin/python3
      - Python3_EXECUTABLE=/opt/venv/bin/python3

      # SSH agent inside container (maps to /ssh-agent below)
      - SSH_AUTH_SOCK=/ssh-agent

    volumes:
      # X11 for RViz
      - /tmp/.X11-unix:/tmp/.X11-unix
      - $XAUTHORITY:/root/.Xauthority

      # SSH agent passthrough
      - ${SSH_AUTH_SOCK}:/ssh-agent

      # Your workspaces/packages
      - ${APE_REPO}/payload_estimation:/ros2_ws/src/payload_estimation:rw
      - ${APE_REPO}/rbyt_robotiq:/ros2_ws/src/rbyt_robotiq:rw
      - ${APE_REPO}/Universal_Robots_ROS2_Description:/ros2_ws/src/Universal_Robots_ROS2_Description:rw
      - ${APE_REPO}/Universal_Robots_ROS2_Driver:/ros2_ws/src/Universal_Robots_ROS2_Driver:rw
      - ${APE_REPO}/manipulator_description:/ros2_ws/src/manipulator_description:rw
      - ${APE_REPO}/manipulator_moveit_config:/ros2_ws/src/manipulator_moveit_config:rw

    working_dir: /ros2_ws
    stdin_open: true
    tty: true

    entrypoint: ""   # keep MoveIt base entrypoint disabled
    command: >
      bash -lc "
        set -e;
        echo '[compose] ROS/venv sanity...';
        source /opt/ros/humble/setup.bash;
        /opt/venv/bin/python3 -c 'import em,sys; print(\"EmPy:\", em.__version__, \"Py:\", sys.version)';
        echo '[compose] apt universe + update...';
        sudo add-apt-repository -y universe && sudo apt-get update;
        echo '[compose] rosdep update...';
        rosdep update || true;
        echo '[compose] rosdep install from /ros2_ws/src...';
        rosdep install --from-paths /ros2_ws/src --rosdistro humble --ignore-src -r -y --skip-keys=warehouse_ros_mongo || true;
        echo '[compose] colcon build (symlink)...';
        colcon build --symlink-install || true;
        echo '[compose] ready. idling.';
        exec sleep infinity
      "

  moveit_cuda_jazzy:
      build:
        context: .
        dockerfile: Dockerfile.cuda.jazzy
        args:
          USER_UID: ${UID:-1000}
          USER_GID: ${GID:-1000}
          USERNAME: ${USER:-robat}
      image: moveit-jazzy-cuda
      container_name: moveit_jazzy_cuda_container
      network_mode: host
      gpus: all
      ipc: host
      environment:
        - DISPLAY=${DISPLAY}
        - QT_X11_NO_MITSHM=1
        - NVIDIA_VISIBLE_DEVICES=all
        - NVIDIA_DRIVER_CAPABILITIES=all
        - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
        - ROS_DOMAIN_ID=0
        - ROS_LOCALHOST_ONLY=0
        - COLCON_PYTHON_EXECUTABLE=/opt/venv/bin/python3
        - Python3_EXECUTABLE=/opt/venv/bin/python3
        # SSH agent inside container (maps to /ssh-agent below)
        - SSH_AUTH_SOCK=/ssh-agent

      volumes:
        # bind your repo
        # Your workspaces/packages
        - ${APE_REPO}/docker/shortcuts.bash:/ros2_ws/shortcuts.bash:ro
        - ${APE_REPO}/payload_estimation:/ros2_ws/src/payload_estimation:rw
        - ${APE_REPO}/rbyt_robotiq:/ros2_ws/src/rbyt_robotiq:rw
        - ${APE_REPO}/Universal_Robots_ROS2_Description:/ros2_ws/src/Universal_Robots_ROS2_Description:rw
        - ${APE_REPO}/Universal_Robots_ROS2_Driver:/ros2_ws/src/Universal_Robots_ROS2_Driver:rw
        - ${APE_REPO}/manipulator_description:/ros2_ws/src/manipulator_description:rw
        - ${APE_REPO}/manipulator_moveit_config:/ros2_ws/src/manipulator_moveit_config:rw

        - /tmp/.X11-unix:/tmp/.X11-unix:rw

        # ssh-agent for private submodules
        - ${SSH_AUTH_SOCK}:${SSH_AUTH_SOCK}

      working_dir: /ros2_ws
      command: >
        bash -c "
          source /opt/ros/jazzy/setup.bash &&
          rosdep update &&
          rosdep install --from-paths src --rosdistro jazzy --ignore-src -r -y &&
          colcon build --symlink-install
          exec bash
        "

      stdin_open: true
      tty: true
      restart: "no"